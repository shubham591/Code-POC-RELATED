if (CollectionUtils.isNotEmpty(nrrSearchCriteria.getFreeTextList())) {
    List<Predicate> freeTextPredicates = new ArrayList<>();

    // Iterate through each free text term
    for (String freeTextTerm : nrrSearchCriteria.getFreeTextList()) {
        String freeText = "%" + freeTextTerm.trim().toLowerCase() + "%";  // Standardize each free text term

        List<Predicate> termPredicates = new ArrayList<>();

        // Records Series Label (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_LABEL_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_LABEL_FR)), 
                freeText
            )
        );

        // Records Series Description (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_DESCRIPTION_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_DESCRIPTION_FR)), 
                freeText
            )
        );

        // Records Series Example (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_EXAMPLE_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RECORDS_SERIES_EXAMPLE_FR)), 
                freeText
            )
        );

        // Rationale Basis (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RATIONALE_BASIS_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.RATIONALE_BASIS_FR)), 
                freeText
            )
        );

        // Trigger Detail (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.TRIGGER_DETAIL_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.TRIGGER_DETAIL_FR)), 
                freeText
            )
        );

        // Comment (EN & FR)
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.COMMENT_EN)), 
                freeText
            )
        );
        termPredicates.add(
            criteriaBuilder.like(
                criteriaBuilder.lower(root.get(RetentionRule_.COMMENT_FR)), 
                freeText
            )
        );

        // Combine the OR conditions for this term and add it to the global predicate list
        freeTextPredicates.add(criteriaBuilder.or(termPredicates.toArray(new Predicate[0])));
    }

    // Combine the AND logic between different terms
    predicates.add(criteriaBuilder.and(freeTextPredicates.toArray(new Predicate[0])));
}
